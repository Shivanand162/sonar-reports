{"api/authentication/validate": {"valid": true}, "api/ce/activity": {"tasks": [{"organization": "my-org-1", "id": "BU_dO1vsORa8_beWCwsP", "type": "REPORT", "componentId": "AU-Tpxb--iU5OvuD2FLy", "componentKey": "project_1", "componentName": "Project One", "componentQualifier": "TRK", "analysisId": "AU-TpxcB-iU5Ovu12345", "status": "SUCCESS", "submittedAt": "2015-08-13T23:34:59+0200", "submitterLogin": "john", "startedAt": "2015-08-13T23:35:00+0200", "executedAt": "2015-08-13T23:35:10+0200", "executionTimeMs": 10000, "logs": false, "hasErrorStacktrace": false, "hasScannerContext": true}, {"organization": "my-org-2", "id": "AU_dO1vsORa8_beWCwmP", "taskType": "REPORT", "componentId": "AU_dO1vlORa8_beWCwmO", "componentKey": "project_2", "componentName": "Project Two", "componentQualifier": "TRK", "status": "FAILED", "submittedAt": "2015-09-17T23:34:59+0200", "startedAt": "2015-09-17T23:35:00+0200", "executedAt": "2015-08-13T23:37:00+0200", "executionTimeMs": 120000, "logs": false, "errorMessage": "Failed to unzip analysis report", "hasErrorStacktrace": true, "hasScannerContext": true}]}, "api/ce/activity_status": {"pending": 2, "inProgress": 1, "failing": 5, "pendingTime": 100123}, "api/ce/component": {"queue": [{"organization": "my-org-1", "id": "AU_w84A6gAS1Hm6h4_ih", "type": "REPORT", "componentId": "AU_w74XMgAS1Hm6h4-Y-", "componentKey": "com.github.kevinsawicki:http-request-parent", "componentName": "HttpRequest", "componentQualifier": "TRK", "status": "PENDING", "submittedAt": "2015-09-21T19:28:54+0200", "logs": false}], "current": {"organization": "my-org-1", "id": "AU_w8LDjgAS1Hm6h4-aY", "type": "REPORT", "componentId": "AU_w74XMgAS1Hm6h4-Y-", "componentKey": "com.github.kevinsawicki:http-request-parent", "componentName": "HttpRequest", "componentQualifier": "TRK", "analysisId": "123456", "status": "FAILED", "submittedAt": "2015-09-21T19:25:49+0200", "startedAt": "2015-09-21T19:25:57+0200", "finishedAt": "2015-09-21T19:25:58+0200", "executionTimeMs": 1371, "logs": false, "errorMessage": "the error message", "errorType": "the optional error type", "hasErrorStacktrace": false, "hasScannerContext": true}}, "api/ce/task": {"task": {"organization": "my-org-1", "id": "AVAn5RKqYwETbXvgas-I", "type": "REPORT", "componentId": "AVAn5RJmYwETbXvgas-H", "componentKey": "project_1", "componentName": "Project One", "componentQualifier": "TRK", "analysisId": "123456", "status": "FAILED", "submittedAt": "2015-10-02T11:32:15+0200", "startedAt": "2015-10-02T11:32:16+0200", "executedAt": "2015-10-02T11:32:22+0200", "executionTimeMs": 5286, "errorMessage": "Fail to extract report AVaXuGAi_te3Ldc_YItm from database", "logs": false, "hasErrorStacktrace": true, "errorStacktrace": "java.lang.IllegalStateException: Fail to extract report AVaXuGAi_te3Ldc_YItm from database\n\tat org.sonar.server.computation.task.projectanalysis.step.ExtractReportStep.execute(ExtractReportStep.java:50)", "scannerContext": "SonarQube plugins:\n\t- Git 1.0 (scmgit)\n\t- Java 3.13.1 (java)", "hasScannerContext": true}}, "api/components/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 1}, "components": [{"organization": "my-org-1", "key": "project-key", "qualifier": "TRK", "name": "Project Name", "project": "project-key"}]}, "api/components/show": {"component": {"organization": "my-org-1", "key": "com.sonarsource:java-markdown:src/main/java/com/sonarsource/markdown/impl/Rule.java", "name": "Rule.java", "qualifier": "FIL", "language": "java", "path": "src/main/java/com/sonarsource/markdown/impl/Rule.java", "analysisDate": "2017-03-01T11:39:03+0100", "leakPeriodDate": "2017-01-01T11:39:03+0100", "version": "1.1"}, "ancestors": [{"organization": "my-org-1", "key": "com.sonarsource:java-markdown:src/main/java/com/sonarsource/markdown/impl", "name": "src/main/java/com/sonarsource/markdown/impl", "qualifier": "DIR", "path": "src/main/java/com/sonarsource/markdown/impl", "analysisDate": "2017-03-01T11:39:03+0100", "version": "1.1"}, {"organization": "my-org-1", "key": "com.sonarsource:java-markdown", "name": "Java Markdown", "description": "Java Markdown Project", "qualifier": "TRK", "analysisDate": "2017-03-01T11:39:03+0100", "version": "1.1", "tags": ["language", "plugin"], "visibility": "private"}]}, "api/components/tree": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "baseComponent": {"organization": "my-org-1", "key": "MY_PROJECT_KEY", "description": "DESCRIPTION_MY_PROJECT_ID", "qualifier": "TRK", "tags": [], "visibility": "private"}, "components": [{"organization": "my-org-1", "key": "com.sonarsource:java-markdown:src/test/java/com/sonarsource/markdown/BasicMarkdownParser.java", "name": "BasicMarkdownParser.java", "qualifier": "UTS", "path": "src/test/java/com/sonarsource/markdown/BasicMarkdownParser.java", "language": "java"}, {"organization": "my-org-1", "key": "com.sonarsource:java-markdown:src/test/java/com/sonarsource/markdown/BasicMarkdownParserTest.java", "name": "BasicMarkdownParserTest.java", "qualifier": "UTS", "path": "src/test/java/com/sonarsource/markdown/BasicMarkdownParserTest.java", "language": "java"}, {"organization": "my-org-1", "key": "com.sonarsource:java-markdown:src/main/java/com/sonarsource/markdown", "name": "src/main/java/com/sonarsource/markdown", "qualifier": "DIR", "path": "src/main/java/com/sonarsource/markdown"}]}, "api/duplications/show": {"duplications": [{"blocks": [{"from": 94, "size": 101, "_ref": "1"}, {"from": 83, "size": 101, "_ref": "2"}]}, {"blocks": [{"from": 38, "size": 40, "_ref": "1"}, {"from": 29, "size": 39, "_ref": "2"}]}, {"blocks": [{"from": 148, "size": 24, "_ref": "1"}, {"from": 137, "size": 24, "_ref": "2"}, {"from": 137, "size": 24, "_ref": "3"}]}], "files": {"1": {"key": "org.codehaus.sonar:sonar-plugin-api:src/main/java/org/sonar/api/utils/command/CommandExecutor.java", "name": "CommandExecutor", "projectName": "SonarQube"}, "2": {"key": "com.sonarsource.orchestrator:sonar-orchestrator:src/main/java/com/sonar/orchestrator/util/CommandExecutor.java", "name": "CommandExecutor", "projectName": "SonarSource :: Orchestrator"}, "3": {"key": "org.codehaus.sonar.runner:sonar-runner-api:src/main/java/org/sonar/runner/api/CommandExecutor.java", "name": "CommandExecutor", "projectName": "SonarSource Runner"}}}, "api/favorites/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "favorites": [{"organization": "my-org", "key": "K2", "name": "Apache HBase", "qualifier": "TRK"}, {"organization": "openjdk", "key": "K3", "name": "JDK9", "qualifier": "TRK"}, {"organization": "my-org", "key": "K1", "name": "Samba", "qualifier": "TRK"}]}, "api/favourites/index": {"errors": [{"msg": "The web service '/api/...' doesn't exists anymore, please read its documentation to use alternatives"}]}, "api/hotspots/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "hotspots": [{"key": "hotspot-0", "component": "com.sonarsource:test-project:src/main/java/com/sonarsource/FourthClass.java", "project": "com.sonarsource:test-project", "securityCategory": "others", "vulnerabilityProbability": "LOW", "status": "TO_REVIEW", "line": 10, "message": "message-0", "assignee": "assignee-uuid", "author": "joe", "creationDate": "2020-01-02T15:43:10+0100", "updateDate": "2020-01-02T15:43:10+0100", "textRange": {"startLine": 2, "endLine": 2, "startOffset": 0, "endOffset": 204}, "ruleKey": "repository:rule-key"}, {"key": "hotspot-1", "component": "com.sonarsource:test-project:src/main/java/com/sonarsource/FourthClass.java", "project": "com.sonarsource:test-project", "securityCategory": "others", "vulnerabilityProbability": "LOW", "status": "TO_REVIEW", "line": 11, "message": "message-1", "assignee": "assignee-uuid", "author": "joe", "creationDate": "2020-01-02T15:43:10+0100", "updateDate": "2020-01-02T15:43:10+0100", "ruleKey": "repository:rule-key"}, {"key": "hotspot-2", "component": "com.sonarsource:test-project:src/main/java/com/sonarsource/FourthClass.java", "project": "com.sonarsource:test-project", "securityCategory": "others", "vulnerabilityProbability": "LOW", "status": "TO_REVIEW", "line": 12, "message": "message-2", "assignee": "assignee-uuid", "author": "joe", "creationDate": "2020-01-02T15:43:10+0100", "updateDate": "2020-01-02T15:43:10+0100", "ruleKey": "repository:rule-key"}], "components": [{"organization": "default-organization", "key": "com.sonarsource:test-project:src/main/java/com/sonarsource/FourthClass.java", "qualifier": "FIL", "name": "FourthClass.java", "longName": "src/main/java/com/sonarsource/FourthClass.java", "path": "src/main/java/com/sonarsource/FourthClass.java"}, {"organization": "default-organization", "key": "com.sonarsource:test-project", "qualifier": "TRK", "name": "test-project", "longName": "test-project"}]}, "api/hotspots/show": {"key": "AW9mgJw6eFC3pGl94Wrf", "component": {"organization": "org1", "key": "com.sonarsource:test-project:src/main/java/com/sonarsource/FourthClass.java", "qualifier": "FIL", "name": "FourthClass.java", "longName": "src/main/java/com/sonarsource/FourthClass.java", "path": "src/main/java/com/sonarsource/FourthClass.java"}, "project": {"organization": "org1", "key": "com.sonarsource:test-project", "qualifier": "TRK", "name": "test-project", "longName": "test-project"}, "rule": {"key": "java:S4787", "name": "rule-name", "securityCategory": "others", "vulnerabilityProbability": "LOW"}, "status": "TO_REVIEW", "line": 10, "message": "message", "assignee": "joe", "author": "joe", "creationDate": "2020-01-02T15:43:10+0100", "updateDate": "2020-01-02T15:43:10+0100", "changelog": [{"user": "joe", "userName": "Joe", "creationDate": "2020-01-02T14:44:55+0100", "diffs": [{"key": "diff-key-0", "newValue": "new-value-0", "oldValue": "old-value-0"}], "avatar": "my-avatar", "isUserActive": true}, {"user": "joe", "userName": "Joe", "creationDate": "2020-01-02T14:44:55+0100", "diffs": [{"key": "diff-key-1", "newValue": "new-value-1", "oldValue": "old-value-1"}], "avatar": "my-avatar", "isUserActive": true}, {"user": "joe", "userName": "Joe", "creationDate": "2020-01-02T14:44:55+0100", "diffs": [{"key": "diff-key-2", "newValue": "new-value-2", "oldValue": "old-value-2"}], "avatar": "my-avatar", "isUserActive": true}], "comment": [{"key": "comment-0", "login": "Joe", "htmlText": "html text 0", "markdown": "markdown 0", "createdAt": "2020-01-02T14:47:47+0100"}, {"key": "comment-1", "login": "Joe", "htmlText": "html text 1", "markdown": "markdown 1", "createdAt": "2020-01-02T14:47:47+0100"}, {"key": "comment-2", "login": "Joe", "htmlText": "html text 2", "markdown": "markdown 2", "createdAt": "2020-01-02T14:47:47+0100"}], "users": [{"login": "joe", "name": "Joe", "active": true}], "canChangeStatus": true}, "api/issues/add_comment": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "issueStatus": "CONFIRMED", "status": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"id": 23498, "key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/assign": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/authors": {"authors": ["luke.skywalker", "leia.organa"]}, "api/issues/bulk_change": {"total": 2, "success": 1, "ignored": 1, "failures": 0}, "api/issues/changelog": {"changelog": [{"user": "john.smith", "userName": "John Smith", "isUserActive": true, "avatar": "b0d8c6e5ea589e6fc3d3e08afb1873bb", "creationDate": "2014-03-04T23:03:44+0100", "diffs": [{"key": "severity", "newValue": "BLOCKER", "oldValue": "MAJOR"}]}]}, "api/issues/delete_comment": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/do_transition": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/edit_comment": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 1}, "issues": [{"key": "01fc972e-2a3c-433e-bcae-0bd7f88f5123", "component": "com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest", "project": "com.github.kevinsawicki:http-request", "rule": "checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck", "issueStatus": "CLOSED", "status": "RESOLVED", "resolution": "FALSE-POSITIVE", "severity": "MINOR", "message": "'3' is a magic number.", "line": 81, "hash": "a227e508d6646b55a086ee11d63b21e9", "author": "Developer 1", "effort": "2h1min", "creationDate": "2013-05-13T17:55:39+0200", "updateDate": "2013-05-13T17:55:39+0200", "tags": ["bug"], "type": "RELIABILITY", "comments": [{"key": "7d7c56f5-7b5a-41b9-87f8-36fa70caa5ba", "login": "john.smith", "htmlText": "Must be &quot;final&quot;!", "markdown": "Must be \"final\"!", "updatable": false, "createdAt": "2013-05-13T18:08:34+0200"}], "attr": {"jira-issue-key": "SONAR-1234"}, "transitions": ["unconfirm", "resolve", "falsepositive"], "actions": ["comment"], "textRange": {"startLine": 2, "endLine": 2, "startOffset": 0, "endOffset": 204}, "flows": [{"locations": [{"textRange": {"startLine": 16, "endLine": 16, "startOffset": 0, "endOffset": 30}, "msg": "Expected position: 5"}]}, {"locations": [{"textRange": {"startLine": 15, "endLine": 15, "startOffset": 0, "endOffset": 37}, "msg": "Expected position: 6"}]}], "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}], "components": [{"key": "com.github.kevinsawicki:http-request:src/main/java/com/github/kevinsawicki/http/HttpRequest.java", "enabled": true, "qualifier": "FIL", "name": "HttpRequest.java", "longName": "src/main/java/com/github/kevinsawicki/http/HttpRequest.java", "path": "src/main/java/com/github/kevinsawicki/http/HttpRequest.java"}, {"key": "com.github.kevinsawicki:http-request", "enabled": true, "qualifier": "TRK", "name": "http-request", "longName": "http-request"}], "rules": [{"key": "checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck", "name": "Magic Number", "status": "READY", "lang": "java", "langName": "Java"}], "users": [{"login": "admin", "name": "Administrator", "active": true, "avatar": "ab0ec6adc38ad44a15105f207394946f"}]}, "api/issues/set_severity": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/set_tags": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "projectId": 23498, "subProjectId": 23498}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/set_type": {"issue": {"key": "AVibidgv1LF0E-ru2DVv", "rule": "squid:S2301", "severity": "MAJOR", "component": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "project": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "line": 78, "textRange": {"startLine": 78, "endLine": 78, "startOffset": 14, "endOffset": 39}, "flows": [], "status": "CONFIRMED", "issueStatus": "CONFIRMED", "message": "Provide multiple methods instead of using \"modal\" to determine which action to take.", "effort": "15min", "debt": "15min", "assignee": "john.smith", "author": "john.smith@email.com", "tags": ["design"], "transitions": ["unconfirm", "resolve", "falsepositive", "wontfix"], "actions": ["comment", "assign", "set_tags", "set_type", "set_severity"], "comments": [{"key": "AVmDRx8Zm-z8OYZYRSxo", "login": "jane.doo", "htmlText": "Please fix this", "markdown": "Please fix this", "updatable": true, "createdAt": "2017-01-09T13:49:53+0100"}], "creationDate": "2016-11-25T13:50:24+0100", "updateDate": "2017-01-09T13:51:12+0100", "type": "CODE_SMELL", "ruleDescriptionContextKey": "spring", "cleanCodeAttributeCategory": "INTENTIONAL", "cleanCodeAttribute": "CLEAR", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "components": [{"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij:src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "uuid": "AVfTIlxMwczdZ2UaLhnt", "enabled": true, "qualifier": "FIL", "name": "ServerIssueUpdater.java", "longName": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java", "path": "src/main/java/org/sonarlint/intellij/core/ServerIssueUpdater.java"}, {"key": "org.sonarsource.sonarlint.intellij:sonarlint-intellij", "uuid": "8b745480-b598-4e34-af4a-cb2de1808e50", "enabled": true, "qualifier": "TRK", "name": "SonarLint for IntelliJ IDEA", "longName": "SonarLint for IntelliJ IDEA"}], "rules": [{"key": "squid:S2301", "name": "Public methods should not contain selector arguments", "lang": "java", "status": "READY", "langName": "Java"}], "users": [{"login": "john.smith", "name": "John Smith", "email": "john.smith@email.com", "active": true}, {"login": "jane.doo", "name": "Jane Doo", "email": "jane.doo@mail.net", "active": true}]}, "api/issues/tags": {"tags": ["convention", "security", "cwe"]}, "api/languages/list": {"languages": [{"key": "c", "name": "C"}, {"key": "cpp", "name": "C++"}, {"key": "java", "name": "Java"}, {"key": "js", "name": "JavaScript"}, {"key": "python", "name": "Python"}]}, "api/measures/component": {"component": {"key": "MY_PROJECT:ElementImpl.java", "name": "ElementImpl.java", "qualifier": "FIL", "language": "java", "path": "src/main/java/com/sonarsource/markdown/impl/ElementImpl.java", "measures": [{"metric": "complexity", "value": "12"}, {"metric": "new_violations", "periods": [{"index": 1, "value": "25", "bestValue": false}]}, {"metric": "ncloc", "value": "114"}]}, "metrics": [{"key": "complexity", "name": "Complexity", "description": "Cyclomatic complexity", "domain": "Complexity", "type": "INT", "higherValuesAreBetter": false, "qualitative": false, "hidden": false, "custom": false}, {"key": "ncloc", "name": "Lines of code", "description": "Non Commenting Lines of Code", "domain": "Size", "type": "INT", "higherValuesAreBetter": false, "qualitative": false, "hidden": false, "custom": false}, {"key": "new_violations", "name": "New issues", "description": "New Issues", "domain": "Issues", "type": "INT", "higherValuesAreBetter": false, "qualitative": true, "hidden": false, "custom": false}], "periods": [{"index": 1, "mode": "previous_version", "date": "2016-01-11T10:49:50+0100", "parameter": "1.0-SNAPSHOT"}]}, "api/measures/component_tree": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "baseComponent": {"key": "MY_PROJECT", "name": "My Project", "qualifier": "TRK", "measures": [{"metric": "new_violations", "periods": [{"index": 1, "value": "255"}]}, {"metric": "complexity", "value": "42"}, {"metric": "ncloc", "value": "1984"}]}, "components": [{"key": "com.sonarsource:java-markdown:src/main/java/com/sonarsource/markdown/impl/ElementImpl.java", "name": "ElementImpl.java", "qualifier": "FIL", "language": "java", "path": "src/main/java/com/sonarsource/markdown/impl/ElementImpl.java", "measures": [{"metric": "new_violations", "periods": [{"index": 1, "value": "25"}]}, {"metric": "complexity", "value": "12"}, {"metric": "ncloc", "value": "114"}]}, {"key": "com.sonarsource:java-markdown:src/test/java/com/sonarsource/markdown/impl/ElementImplTest.java", "name": "ElementImplTest.java", "qualifier": "UTS", "language": "java", "path": "src/test/java/com/sonarsource/markdown/impl/ElementImplTest.java", "measures": [{"metric": "new_violations", "periods": [{"index": 1, "value": "0"}]}]}, {"key": "com.sonarsource:java-markdown:src/main/java/com/sonarsource/markdown/impl", "name": "src/main/java/com/sonarsource/markdown/impl", "qualifier": "DIR", "path": "src/main/java/com/sonarsource/markdown/impl", "measures": [{"metric": "new_violations", "periods": [{"index": 1, "value": "25"}]}, {"metric": "complexity", "value": "35"}, {"metric": "ncloc", "value": "217"}]}], "metrics": [{"key": "complexity", "name": "Complexity", "description": "Cyclomatic complexity", "domain": "Complexity", "type": "INT", "higherValuesAreBetter": false, "qualitative": false, "hidden": false, "custom": false}, {"key": "ncloc", "name": "Lines of code", "description": "Non Commenting Lines of Code", "domain": "Size", "type": "INT", "higherValuesAreBetter": false, "qualitative": false, "hidden": false, "custom": false}, {"key": "new_violations", "name": "New issues", "description": "New Issues", "domain": "Issues", "type": "INT", "higherValuesAreBetter": false, "qualitative": true, "hidden": false, "custom": false, "bestValue": "0"}], "periods": [{"index": 1, "mode": "previous_version", "date": "2016-01-11T10:49:50+0100", "parameter": "1.0-SNAPSHOT"}]}, "api/measures/search_history": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "measures": [{"metric": "complexity", "history": [{"date": "2017-01-23T17:00:53+0100", "value": "45"}, {"date": "2017-01-24T17:00:53+0100", "value": "45"}, {"date": "2017-01-25T17:00:53+0100", "value": "45"}]}, {"metric": "ncloc", "history": [{"date": "2017-01-23T17:00:53+0100", "value": "47"}, {"date": "2017-01-24T17:00:53+0100", "value": "47"}, {"date": "2017-01-25T17:00:53+0100", "value": "47"}]}, {"metric": "new_violations", "history": [{"date": "2017-01-23T17:00:53+0100", "value": "46"}, {"date": "2017-01-24T17:00:53+0100", "value": "46"}, {"date": "2017-01-25T17:00:53+0100", "value": "46"}]}]}, "api/metrics/domains": {"domains": ["API Compatibility", "Issues", "Rules", "Tests", "Documentation"]}, "api/metrics/search": {"metrics": [{"id": "23", "key": "team_size", "name": "Team size", "description": "Number of people in the team", "domain": "Management", "type": "INT", "direction": 0, "qualitative": false, "hidden": false, "custom": true}, {"id": "2", "key": "uncovered_lines", "name": "Uncovered lines", "description": "Uncovered lines", "domain": "Tests", "type": "INT", "direction": 1, "qualitative": true, "hidden": false, "custom": false}], "total": 2, "p": 1, "ps": 100}, "api/metrics/types": {"types": ["INT", "FLOAT", "PERCENT", "BOOL"]}, "api/notifications/list": {"notifications": [{"channel": "EmailChannel", "type": "MyNewIssues"}, {"channel": "EmailChannel", "type": "NewIssues"}, {"channel": "TwitterChannel", "type": "MyNewIssues"}, {"channel": "EmailChannel", "type": "MyNewIssues", "organization": "my-org-1", "project": "my_project", "projectName": "My Project"}, {"channel": "EmailChannel", "type": "NewQualityGateStatus", "organization": "my-org-1", "project": "my_project", "projectName": "My Project"}, {"channel": "TwitterChannel", "type": "MyNewIssues", "organization": "my-org-1", "project": "my_project", "projectName": "My Project"}], "channels": ["EmailChannel", "TwitterChannel"], "globalTypes": [{"key": "MyNewIssues", "isVisibleOnlyForOrgMembers": false}, {"key": "NewIssues", "isVisibleOnlyForOrgMembers": false}, {"key": "NewQualityGateStatus", "isVisibleOnlyForOrgMembers": false}], "perProjectTypes": [{"key": "MyNewIssues", "isVisibleOnlyForOrgMembers": false}, {"key": "NewQualityGateStatus", "isVisibleOnlyForOrgMembers": false}, {"key": "CeReportTaskFailure", "isVisibleOnlyForOrgMembers": true}, {"key": "ChangesOnMyIssue", "isVisibleOnlyForOrgMembers": true}], "organizations": [{"key": "my-org-1", "name": "MyOrgName", "isMember": false}]}, "api/permissions/create_template": {"permissionTemplate": {"name": "Finance", "description": "Permissions for financially related projects", "projectKeyPattern": ".*\\.finance\\..*"}}, "api/permissions/search_global_permissions": {"permissions": [{"key": "admin", "name": "Administer System", "description": "Ability to perform all administration functions for the instance: global configuration and personalization of default dashboards.", "usersCount": 0, "groupsCount": 1}, {"key": "profileadmin", "name": "Administer Quality Profiles", "description": "Ability to perform any action on the quality profiles.", "usersCount": 2, "groupsCount": 0}, {"key": "gateadmin", "name": "Administer Quality Gates", "description": "Ability to perform any action on the quality gates.", "usersCount": 2, "groupsCount": 0}, {"key": "scan", "name": "Execute Analysis", "description": "Ability to execute analyses, and to get all settings required to perform the analysis, even the secured ones like the scm account password, the jira account password, and so on.", "usersCount": 0, "groupsCount": 2}, {"key": "provisioning", "name": "Create Projects", "description": "Ability to initialize project structure before first analysis.", "usersCount": 1, "groupsCount": 1}]}, "api/permissions/search_project_permissions": {"paging": {"pageIndex": 1, "pageSize": 25, "total": 3}, "projects": [{"id": "0bd7b1e7-91d6-439e-a607-4a3a9aad3c6a", "key": "net.java.openjdk:jdk7", "name": "JDK 7", "qualifier": "TRK", "permissions": [{"key": "admin", "usersCount": 3, "groupsCount": 4}, {"key": "issueadmin", "usersCount": 1, "groupsCount": 0}]}, {"id": "ce4c03d6-430f-40a9-b777-ad877c00aa4d", "key": "clang", "name": "Clang", "qualifier": "TRK", "permissions": [{"key": "issueadmin", "usersCount": 1, "groupsCount": 0}]}, {"id": "752d8bfd-420c-4a83-a4e5-8ab19b13c8fc", "key": "Java", "name": "Java", "qualifier": "VW", "permissions": [{"key": "admin", "usersCount": 0, "groupsCount": 1}, {"key": "issueadmin", "usersCount": 1, "groupsCount": 0}]}], "permissions": [{"key": "user", "name": "Browse", "description": "Ability to access a project, browse its measures, and create/edit issues for it."}, {"key": "admin", "name": "Administer", "description": "Ability to access project settings and perform administration tasks. (Users will also need \"Browse\" permission)"}, {"key": "issueadmin", "name": "Administer Issues", "description": "Grants the permission to perform advanced editing on issues: marking an issue False Positive / Won't Fix or changing an Issue's severity. (Users will also need \"Browse\" permission)"}, {"key": "codeviewer", "name": "See Source Code", "description": "Ability to view the project's source code. (Users will also need \"Browse\" permission)"}]}, "api/permissions/update_template": {"permissionTemplate": {"id": "af8cb8cc-1e78-4c4e-8c00-ee8e814009a5", "name": "Finance", "description": "Permissions for financially related projects", "projectKeyPattern": ".*\\.finance\\..*", "createdAt": "2001-09-09T03:46:40+0200", "updatedAt": "2015-08-25T16:18:48+0200"}}, "api/project_analyses/create_event": {"event": {"analysis": "A2", "key": "E1", "category": "OTHER", "name": "My Custom Event"}}, "api/project_analyses/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 3}, "analyses": [{"key": "A2", "date": "2016-12-12T17:12:45+0100", "events": [{"key": "E21", "category": "QUALITY_PROFILE", "name": "Quality Profile changed to Sonar Way"}, {"key": "E22", "category": "OTHER", "name": "6.3"}], "projectVersion": "1.2.1", "buildString": "1.2.1.423", "manualNewCodePeriodBaseline": false, "revision": "be6c75b85da526349c44e3978374c95e0b80a96d"}, {"key": "A1", "date": "2016-12-11T17:12:45+0100", "events": [{"key": "E11", "category": "QUALITY_GATE", "name": "Quality Gate is Red (was Orange)", "description": "Coverage is < 80%"}, {"key": "E12", "category": "VERSION", "name": "6.3"}], "projectVersion": "1.2", "buildString": "1.2.0.322", "manualNewCodePeriodBaseline": true, "revision": "bfe36592eb7f9f2708b5d358b5b5f33ed535c8cf"}, {"key": "P1", "date": "2015-11-11T10:00:00+0100", "events": [{"key": "E31", "category": "QUALITY_GATE", "name": "Quality Gate is Red", "description": ""}], "projectVersion": "1.2", "buildString": "1.2.0.321", "manualNewCodePeriodBaseline": false}]}, "api/project_analyses/update_event": {"event": {"analysis": "A2", "key": "E1", "category": "OTHER", "name": "My Custom Event"}}, "api/project_branches/list": {"branches": [{"name": "feature/foo2", "isMain": false, "type": "SHORT", "mergeBranch": "master", "status": {"qualityGateStatus": "OK", "bugs": 1, "vulnerabilities": 0, "codeSmells": 0}, "analysisDate": "2017-09-02T13:37:00+0100", "commit": {"sha": "P1A5AxmsWdy1WPk0YRk48lVPDuYcy4EgUjtm2oGXt6LKdM6YS9"}, "branchId": "7a451d33-b4ce-425e-9264-f0c113984448"}, {"name": "feature/foo", "isMain": false, "type": "SHORT", "mergeBranch": "master", "status": {"qualityGateStatus": "OK", "bugs": 1, "vulnerabilities": 0, "codeSmells": 0}, "analysisDate": "2017-08-03T13:37:00+0100", "commit": {"sha": "P1A5AxmsWdy1WPk0YRk48lVPDuYcy4EgUjtm2oGXt6LKdM6YS9"}, "branchId": "93cb33a1-b3dd-4226-b0a0-1d74e4dec194"}, {"name": "master", "isMain": true, "type": "LONG", "status": {"qualityGateStatus": "ERROR", "bugs": 0, "vulnerabilities": 0, "codeSmells": 0}, "analysisDate": "2017-04-01T01:15:42+0100", "commit": {"sha": "P1A5AxmsWdy1WPk0YRk48lVPDuYcy4EgUjtm2oGXt6LKdM6YS9"}, "branchId": "88471269-96e8-47f8-8c7d-e40e729f1373"}]}, "api/project_links/create": {"link": {"id": "18", "name": "Custom", "url": "http://example.org"}}, "api/project_links/search": {"links": [{"id": "1", "name": "Homepage", "type": "homepage", "url": "http://example.org"}, {"id": "2", "name": "Custom", "type": "custom", "url": "http://example.org/custom"}]}, "api/project_pull_requests/list": {"pullRequests": [{"key": "123", "title": "Add feature X", "branch": "feature/bar", "base": "feature/foo", "status": {"qualityGateStatus": "OK", "bugs": 0, "vulnerabilities": 0, "codeSmells": 0}, "analysisDate": "2017-04-01T02:15:42+0200", "url": "https://github.com/SonarSource/sonar-core-plugins/pull/32", "target": "feature/foo", "commit": {"sha": "P1A5AxmsWdy1WPk0YRk48lVPDuYcy4EgUjtm2oGXt6LKdM6YS9"}, "contributors": [{"name": "Foo Bar", "login": "foobar@github", "avatar": ""}]}, {"key": "234", "title": "Add feature Y", "branch": "feature/baz", "base": "feature/foo", "status": {"qualityGateStatus": "OK", "bugs": 0, "vulnerabilities": 0, "codeSmells": 0}, "analysisDate": "2017-02-01T02:15:42+0200", "url": "https://github.com/SonarSource/sonar-core-plugins/pull/42", "target": "feature/foo", "commit": {"sha": "P1A5AxmsWdy1WPk0YRk48lVPDuYcy4EgUjtm2oGXt6LKdM6YS8"}, "contributors": [{"name": "Bar Baz", "login": "barbaz@github", "avatar": ""}]}]}, "api/project_tags/search": {"tags": ["official", "offshore", "playoff"]}, "api/projects/bulk_update_key": {"keys": [{"key": "my_project", "newKey": "my_new_project", "duplicate": false}, {"key": "my_project:module_1", "newKey": "my_new_project:module_1", "duplicate": true}, {"key": "my_project:module_2", "newKey": "my_new_project:module_2", "duplicate": false}]}, "api/projects/create": {"project": {"key": "project-key", "name": "project-name", "qualifier": "TRK"}}, "api/projects/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 2}, "components": [{"organization": "my-org-1", "key": "project-key-1", "name": "Project Name 1", "qualifier": "TRK", "visibility": "public", "lastAnalysisDate": "2017-03-01T11:39:03+0300", "revision": "cfb82f55c6ef32e61828c4cb3db2da12795fd767"}, {"organization": "my-org-1", "key": "project-key-2", "name": "Project Name 1", "qualifier": "TRK", "visibility": "private", "lastAnalysisDate": "2017-03-02T15:21:47+0300", "revision": "7be96a94ac0c95a61ee6ee0ef9c6f808d386a355"}]}, "api/properties/index": [{"key": "sonar.test.jira", "value": "abc"}, {"key": "sonar.autogenerated", "value": "val1,val2,val3", "values": ["val1", "val2", "val3"]}, {"key": "sonar.demo", "value": "1,2", "values": ["1", "2"]}, {"key": "sonar.demo.1.text", "value": "foo"}, {"key": "sonar.demo.1.boolean", "value": "true"}, {"key": "sonar.demo.2.text", "value": "bar"}, {"key": "sonar.demo.2.boolean", "value": "false"}], "api/qualitygates/create": {"id": 1, "name": "My Quality Gate"}, "api/qualitygates/create_condition": {"id": 1, "metric": "blocker_violations", "op": "LT", "error": "10", "warning": "5"}, "api/qualitygates/get_by_project": {"qualityGate": {"id": "23", "name": "My team QG", "default": false}}, "api/qualitygates/list": {"qualitygates": [{"id": 8, "name": "Sonar way", "isDefault": true, "isBuiltIn": true, "actions": {"rename": false, "setAsDefault": false, "copy": true, "associateProjects": false, "delete": false, "manageConditions": false}, "conditions": [{"id": 1, "metric": "blocker_violations", "op": "GT", "error": "0"}, {"id": 2, "metric": "tests", "op": "LT", "error": "10"}]}, {"id": 9, "name": "Sonar way - Without Coverage", "isDefault": false, "isBuiltIn": false, "actions": {"rename": true, "setAsDefault": true, "copy": true, "associateProjects": true, "delete": true, "manageConditions": true}, "conditions": []}], "default": 8, "actions": {"create": true}}, "api/qualitygates/project_status": {"projectStatus": {"status": "ERROR", "ignoredConditions": false, "conditions": [{"status": "ERROR", "metricKey": "new_coverage", "comparator": "LT", "periodIndex": 1, "errorThreshold": "85", "actualValue": "82.50562381034781"}, {"status": "ERROR", "metricKey": "new_blocker_violations", "comparator": "GT", "periodIndex": 1, "errorThreshold": "0", "actualValue": "14"}, {"status": "ERROR", "metricKey": "new_critical_violations", "comparator": "GT", "periodIndex": 1, "errorThreshold": "0", "actualValue": "1"}, {"status": "OK", "metricKey": "new_sqale_debt_ratio", "comparator": "GT", "periodIndex": 1, "errorThreshold": "5", "actualValue": "0.6562109862671661"}, {"status": "OK", "metricKey": "reopened_issues", "comparator": "GT", "periodIndex": 1, "actualValue": "0"}, {"status": "ERROR", "metricKey": "open_issues", "comparator": "GT", "periodIndex": 1, "actualValue": "17"}, {"status": "OK", "metricKey": "skipped_tests", "comparator": "GT", "periodIndex": 1, "actualValue": "0"}], "periods": [{"index": 1, "mode": "last_version", "date": "2000-04-27T00:45:23+0200", "parameter": "2015-12-07"}]}}, "api/qualitygates/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 2}, "results": [{"id": 1, "name": "Simple Java project analyzed with the SonarQube Runner", "key": "somple-java", "selected": true}, {"id": 4, "name": "My Project", "key": "my-project", "selected": false}]}, "api/qualitygates/show": {"id": 5, "name": "My Quality Gate", "conditions": [{"id": 2, "metric": "blocker_violations", "op": "GT", "error": "0"}, {"id": 3, "metric": "tests", "op": "LT", "error": "10"}], "isBuiltIn": false, "actions": {"rename": true, "setAsDefault": true, "copy": true, "associateProjects": true, "delete": true, "manageConditions": true}, "isCleanAsYouCode": false}, "api/qualitygates/unset_default": {"errors": [{"msg": "The web service '/api/...' doesn't exists anymore, please read its documentation to use alternatives"}]}, "api/qualityprofiles/changelog": {"total": 3, "ps": 10, "p": 1, "events": [{"date": "2015-02-23T17:58:39+0100", "action": "ACTIVATED", "authorLogin": "anakin.skywalker", "authorName": "Anakin Skywalker", "ruleKey": "squid:S2438", "ruleName": "\"Threads\" should not be used where \"Runnables\" are expected", "cleanCodeAttribute": "COMPLETE", "cleanCodeAttributeCategory": "INTENTIONAL", "impacts": [{"softwareQuality": "RELIABILITY", "severity": "LOW"}, {"softwareQuality": "SECURITY", "severity": "HIGH"}], "params": {"severity": "CRITICAL"}}, {"date": "2015-02-23T17:58:18+0100", "action": "DEACTIVATED", "authorLogin": "padme.amidala", "authorName": "Padme Amidala", "ruleKey": "squid:S2162", "ruleName": "\"equals\" methods should be symmetric and work for subclasses", "cleanCodeAttribute": "COMPLETE", "cleanCodeAttributeCategory": "INTENTIONAL", "impacts": [{"softwareQuality": "RELIABILITY", "severity": "LOW"}, {"softwareQuality": "SECURITY", "severity": "HIGH"}]}, {"action": "ACTIVATED", "authorLogin": "obiwan.kenobi", "authorName": "Obiwan Kenobi", "ruleKey": "squid:S00101", "ruleName": "Class names should comply with a naming convention", "cleanCodeAttribute": "COMPLETE", "cleanCodeAttributeCategory": "INTENTIONAL", "impacts": [{"softwareQuality": "RELIABILITY", "severity": "LOW"}, {"softwareQuality": "SECURITY", "severity": "HIGH"}], "date": "2014-09-12T15:20:46+0200", "params": {"severity": "MAJOR", "format": "^[A-Z][a-zA-Z0-9]*"}}]}, "api/qualityprofiles/copy": {"key": "AU-TpxcA-iU5OvuD2FL1", "name": "My New Profile", "language": "Java", "isDefault": false, "isInherited": true, "parentKey": "AU-TpxcA-iU5OvuD2FL2"}, "api/qualityprofiles/create": {"profile": {"isDefault": false, "isInherited": false, "language": "java", "languageName": "Java", "name": "My New Profile", "key": "AU-TpxcA-iU5OvuD2FL1"}, "warnings": ["Unable to import unknown PMD rule 'rulesets/java/strings.xml'", "Unable to import unknown PMD rule 'rulesets/java/basic.xml/UnnecessaryConversionTemporary'", "Unable to import unknown PMD rule 'rulesets/java/basic.xml/EmptyCatchBlock'", "Unable to import unknown PMD rule 'rulesets/java/braces.xml'"]}, "api/qualityprofiles/exporters": {"exporters": [{"key": "pmd", "name": "PMD", "languages": ["java"]}, {"key": "checkstyle", "name": "Checkstyle", "languages": ["java"]}, {"key": "js-lint", "name": "JS Lint", "languages": ["js"]}, {"key": "android-lint", "name": "Android Lint", "languages": ["xml", "java"]}]}, "api/qualityprofiles/importers": {"importers": [{"key": "pmd", "name": "PMD", "languages": ["java"]}, {"key": "checkstyle", "name": "Checkstyle", "languages": ["java"]}, {"key": "js-lint", "name": "JS Lint", "languages": ["js"]}, {"key": "android-lint", "name": "Android Lint", "languages": ["xml", "java"]}]}, "api/qualityprofiles/inheritance": {"profile": {"key": "AU-TpxcA-iU5OvuD2FL5", "name": "My BU Profile", "parent": "AU-TpxcA-iU5OvuD2FL2", "activeRuleCount": 3, "overridingRuleCount": 1, "isBuiltIn": false}, "ancestors": [{"key": "AU-TpxcA-iU5OvuD2FL1", "name": "My Company Profile", "parent": "xoo-my-group-profile-01234", "activeRuleCount": 3, "isBuiltIn": false}, {"key": "AU-TpxcA-iU5OvuD2FL0", "name": "Sonar way", "activeRuleCount": 2, "isBuiltIn": true}], "children": [{"key": "AU-TpxcB-iU5OvuD2FL6", "name": "For Project One", "activeRuleCount": 5, "isBuiltIn": false}, {"key": "AU-TpxcB-iU5OvuD2FL7", "name": "For Project Two", "activeRuleCount": 4, "overridingRuleCount": 1, "isBuiltIn": false}]}, "api/qualityprofiles/projects": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 4}, "results": [{"id": "5eab015a-1f76-4ba4-bd89-bf547132d673", "key": "org.sonarsource.javascript:javascript", "name": "JavaScript Plugin", "selected": true}, {"id": "f1ab623e-d00d-401b-bf9e-c45e91976bf0", "key": "org.jenkins-ci.plugins:sonar", "name": "Jenkins SonarQube Plugin", "selected": false}, {"id": "69e57151-be0d-4157-adff-c06741d88879", "key": "org.sonarsource.sonarqube:sonarqube", "name": "SonarQube", "selected": false}, {"id": "c355a0fe-9b77-4d39-9837-8364a41ce10d", "key": "org.sonarsource.android:sonar-android", "name": "SonarQube Android Plugin", "selected": false}]}, "api/qualityprofiles/search": {"profiles": [{"key": "AU-TpxcA-iU5OvuD2FL3", "name": "Sonar way", "language": "cs", "languageName": "C#", "isInherited": false, "isBuiltIn": true, "activeRuleCount": 3, "activeDeprecatedRuleCount": 0, "isDefault": true, "ruleUpdatedAt": "2016-12-22T19:10:03+0100", "lastUsed": "2016-12-01T19:10:03+0100", "actions": {"edit": false, "setAsDefault": false, "copy": false, "delete": false, "associateProjects": false}}, {"key": "AU-TpxcA-iU5OvuD2FL1", "name": "My BU Profile", "language": "java", "languageName": "Java", "isInherited": true, "isBuiltIn": false, "parentKey": "iU5OvuD2FLz", "parentName": "My Company Profile", "activeRuleCount": 15, "activeDeprecatedRuleCount": 5, "isDefault": false, "projectCount": 7, "ruleUpdatedAt": "2016-12-20T19:10:03+0100", "lastUsed": "2016-12-21T16:10:03+0100", "userUpdatedAt": "2016-06-28T21:57:01+0200", "actions": {"edit": true, "setAsDefault": false, "copy": false, "delete": true, "associateProjects": true}}, {"key": "iU5OvuD2FLz", "name": "My Company Profile", "language": "java", "languageName": "Java", "isInherited": false, "isDefault": true, "isBuiltIn": false, "activeRuleCount": 9, "activeDeprecatedRuleCount": 2, "ruleUpdatedAt": "2016-12-22T19:10:03+0100", "userUpdatedAt": "2016-06-29T21:57:01+0200", "actions": {"edit": true, "setAsDefault": false, "copy": false, "delete": false, "associateProjects": false}}, {"key": "AU-TpxcB-iU5OvuD2FL7", "name": "Sonar way", "language": "py", "languageName": "Python", "isInherited": false, "isBuiltIn": true, "activeRuleCount": 2, "activeDeprecatedRuleCount": 0, "isDefault": true, "ruleUpdatedAt": "2014-12-22T19:10:03+0100", "actions": {"edit": false, "setAsDefault": false, "copy": false, "delete": false, "associateProjects": false}}], "actions": {"create": false}}, "api/rules/repositories": {"repositories": [{"key": "clirr", "name": "Clirr", "language": "java"}, {"key": "common-c", "name": "Common SonarQube", "language": "c"}, {"key": "common-cpp", "name": "Common SonarQube", "language": "cpp"}, {"key": "common-cs", "name": "Common SonarQube", "language": "cs"}, {"key": "common-java", "name": "Common SonarQube", "language": "java"}, {"key": "common-js", "name": "Common SonarQube", "language": "js"}, {"key": "common-objc", "name": "Common SonarQube", "language": "objc"}, {"key": "common-php", "name": "Common SonarQube", "language": "php"}, {"key": "c-cppcheck", "name": "Cppcheck", "language": "c"}, {"key": "cpp-cppcheck", "name": "Cppcheck", "language": "cpp"}, {"key": "fb-contrib", "name": "fb-contrib", "language": "java"}, {"key": "findbugs", "name": "FindBugs", "language": "java"}, {"key": "fxcop", "name": "FxCop / Code Analysis", "language": "cs"}, {"key": "resharper-cs", "name": "ReSharper", "language": "cs"}, {"key": "resharper-vbnet", "name": "ReSharper", "language": "vbnet"}, {"key": "c", "name": "SonarQube", "language": "c"}, {"key": "cpp", "name": "SonarQube", "language": "cpp"}, {"key": "csharpsquid", "name": "SonarQube", "language": "cs"}, {"key": "javascript", "name": "SonarQube", "language": "js"}, {"key": "objc", "name": "SonarQube", "language": "objc"}, {"key": "php", "name": "SonarQube", "language": "php"}, {"key": "squid", "name": "SonarQube", "language": "java"}, {"key": "stylecop", "name": "StyleCop", "language": "cs"}]}, "api/rules/search": {"total": 4, "p": 1, "ps": 3, "rules": [{"key": "squid:S1067", "repo": "squid", "name": "Expressions should not be too complex", "createdAt": "2013-03-27T08:52:40+0100", "updatedAt": "2013-03-27T08:52:40+0100", "htmlDesc": "<p>\nThe complexity of an expression is defined by the number of <code>&&</code>, <code>||</code> and <code>condition ? ifTrue : ifFalse</code> operators it contains.\nA single expression's complexity should not become too high to keep the code readable.\n</p>\n\n<p>The following code, with a maximum complexity of 3:</p>\n\n<pre>\nif (condition1 && condition2 && condition3 && condition4) { /* ... */ }  // Non-Compliant\n</pre>\n\n<p>could be refactored into something like:</p>\n\n<pre>\nif (relevantMethodName1() && relevantMethodName2()) { /* ... */ }        // Compliant\n\n/* ... */\n\nprivate boolean relevantMethodName1() {\n  return condition1 && condition2;\n}\n\nprivate boolean relevantMethodName2() {\n  return condition3 && condition4;\n}\n</pre>", "severity": "MAJOR", "status": "READY", "internalKey": "S1067", "isTemplate": false, "tags": [], "sysTags": ["brain-overload"], "lang": "java", "langName": "Java", "scope": "MAIN", "isExternal": false, "type": "CODE_SMELL", "descriptionSections": [{"key": "root_cause", "content": "<h3 class=\"page-title coding-rules-detail-header\"><big>Unnecessary imports should be removed</big></h3>"}, {"key": "how_to_fix", "content": "<h2>Recommended Secure Coding Practices</h2><ul><li> activate Spring Security's CSRF protection. </li></ul>", "context": {"displayName": "Spring", "key": "spring"}}, {"key": "how_to_fix", "content": "<h2>Recommended Secure Coding Practices</h2><ul><li> activate hibernate protection. </li></ul>", "context": {"displayName": "Hibernate", "key": "hibernate"}}], "params": [{"key": "max", "desc": "Maximum number of allowed conditional operators in an expression", "defaultValue": "3"}]}, {"key": "squid:ClassCyclomaticComplexity", "repo": "squid", "name": "Avoid too complex class", "createdAt": "2013-03-27T08:52:40+0100", "updatedAt": "2013-03-27T08:52:40+0100", "htmlDesc": "<p>The Cyclomatic Complexity is measured by the number of (&&, ||)\n\toperators and (if, while, do, for, ?:, catch, switch, case, return,\n\tthrow) statements in the body of a class plus one for each constructor,\n\tmethod (but not getter/setter), static initializer, or instance\n\tinitializer in the class. The last return stament in method, if exists,\n\tis not taken into account.</p>\n<p>\n\tEven when the Cyclomatic Complexity of a class is very high, this\n\tcomplexity might be well distributed among all methods. Nevertheless,\n\tmost of the time, a very complex class is a class which breaks the <a\n\t\thref='http://en.wikipedia.org/wiki/Single_responsibility_principle'>Single\n\t\tResponsibility Principle</a> and which should be re-factored to be split\n\tin several classes.\n</p>", "severity": "MAJOR", "status": "READY", "internalKey": "ClassCyclomaticComplexity", "isTemplate": false, "tags": [], "sysTags": ["brain-overload"], "lang": "java", "langName": "Java", "scope": "MAIN", "isExternal": false, "type": "BUG", "params": [{"key": "max", "desc": "Maximum complexity allowed.", "defaultValue": "200"}]}, {"key": "squid:MethodCyclomaticComplexity", "repo": "squid", "name": "Methods should not be too complex", "createdAt": "2013-03-27T08:52:40+0100", "updatedAt": "2013-03-27T08:52:40+0100", "htmlDesc": "<p>The Cyclomatic Complexity is measured by the number of\n\t(&amp;&amp;, ||) operators and (if, while, do, for, ?:, catch, switch,\n\tcase, return, throw) statements in the body of a class plus one for\n\teach constructor, method (but not getter/setter), static initializer,\n\tor instance initializer in the class. The last return stament in\n\tmethod, if exists, is not taken into account.</p>\n<p>\n\tEven when the Cyclomatic Complexity of a class is very high, this\n\tcomplexity might be well distributed among all methods. Nevertheless,\n\tmost of the time, a very complex class is a class which breaks the <a\n\t\thref=\"http://en.wikipedia.org/wiki/Single_responsibility_principle\">Single\n\t\tResponsibility Principle</a> and which should be re-factored to be split\n\tin several classes.\n</p>", "severity": "MAJOR", "status": "READY", "internalKey": "MethodCyclomaticComplexity", "isTemplate": false, "tags": [], "sysTags": ["brain-overload"], "lang": "java", "langName": "Java", "scope": "MAIN", "isExternal": false, "type": "VULNERABILITY", "params": [{"key": "max", "desc": "Maximum complexity allowed.", "defaultValue": "10"}]}, {"key": "squid:XPath", "repo": "squid", "name": "XPath rule", "createdAt": "2013-03-27T08:52:40+0100", "updatedAt": "2013-03-27T08:52:40+0100", "htmlDesc": "<p>\nThis rule allows to define some homemade Java rules with help of an XPath expression.\n</p>\n\n<p>\nIssues are created depending on the return value of the XPath expression. If the XPath expression returns:\n</p>\n<ul>\n <li>a single or list of AST nodes, then a line issue with the given message is created for each node</li>\n <li>a boolean, then a file issue with the given message is created only if the boolean is true</li>\n <li>anything else, no issue is created</li>\n</ul>\n\n<p>\nHere is an example of an XPath expression to log an issue on each if statement : //ifStatement\n</p>", "severity": "MAJOR", "status": "READY", "internalKey": "XPath", "isTemplate": true, "tags": [], "sysTags": [], "mdNote": "<p>\nThe tree produced by the <code>firstOf()</code> matcher is hard to work with from checks when alternatives are not named.\n</p>\n\n<p>\nConsider the following rule:\n</p>\n\n<pre>\nb.rule(COMPILATION_UNIT).is(\n b.firstOf( /* Non-Compliant */\n \"FOO\",\n \"BAR\"));\n</pre>\n\n<p>\nIf, from a check, one wants to forbid the usage of the \"BAR\" alternative,\nthe easiest option will be to verify that the value of the first token is \"BAR\",\ni.e. <code>\"BAR\".equals(compilationUnitNode.getTokenValue())</code>.\n</p>\n\n<p>\nThis is not maintainable, for at least two reasons:\n</p>\n\n<ul>\n <li>The grammar might evolve to also accept \"bar\" in lowercase, which will break <code>\"BAR\".equals(...)</code></li>\n <li>The grammar might evolve to optionally accept \"hello\" before the <code>firstOf()</code>, which will break <code>compilationUnitNode.getTokenValue()</code></li>\n</ul>\n\n<p>\nInstead, it is much better to rewrite the grammar as:\n</p>\n\n<pre>\nb.rule(COMPILATION_UNIT).is(\n firstOf( /* Compliant */\n FOO,\n BAR));\nb.rule(FOO).is(\"FOO\");\nb.rule(BAR).is(\"BAR\");\n</pre>\n\n<p>\nThe same check which forbids \"BAR\" would be written as: <code>compilationUnitNode.hasDirectChildren(BAR)</code>.\nThis allows both of the previous grammar evolutions to be made without impacting the check at all.\n</p>", "htmlNote": "&lt;p&gt;<br/>The tree produced by the &lt;code&gt;firstOf()&lt;/code&gt; matcher is hard to work with from checks when alternatives are not named.<br/>&lt;/p&gt;<br/><br/>&lt;p&gt;<br/>Consider the following rule:<br/>&lt;/p&gt;<br/><br/>&lt;pre&gt;<br/>b.rule(COMPILATION_UNIT).is(<br/> b.firstOf( /* Non-Compliant */<br/> &quot;FOO&quot;,<br/> &quot;BAR&quot;));<br/>&lt;/pre&gt;<br/><br/>&lt;p&gt;<br/>If, from a check, one wants to forbid the usage of the &quot;BAR&quot; alternative,<br/>the easiest option will be to verify that the value of the first token is &quot;BAR&quot;,<br/>i.e. &lt;code&gt;&quot;BAR&quot;.equals(compilationUnitNode.getTokenValue())&lt;/code&gt;.<br/>&lt;/p&gt;<br/><br/>&lt;p&gt;<br/>This is not maintainable, for at least two reasons:<br/>&lt;/p&gt;<br/><br/>&lt;ul&gt;<br/> &lt;li&gt;The grammar might evolve to also accept &quot;bar&quot; in lowercase, which will break &lt;code&gt;&quot;BAR&quot;.equals(...)&lt;/code&gt;&lt;/li&gt;<br/> &lt;li&gt;The grammar might evolve to optionally accept &quot;hello&quot; before the &lt;code&gt;firstOf()&lt;/code&gt;, which will break &lt;code&gt;compilationUnitNode.getTokenValue()&lt;/code&gt;&lt;/li&gt;<br/>&lt;/ul&gt;<br/><br/>&lt;p&gt;<br/>Instead, it is much better to rewrite the grammar as:<br/>&lt;/p&gt;<br/><br/>&lt;pre&gt;<br/>b.rule(COMPILATION_UNIT).is(<br/> firstOf( /* Compliant */<br/> FOO,<br/> BAR));<br/>b.rule(FOO).is(&quot;FOO&quot;);<br/>b.rule(BAR).is(&quot;BAR&quot;);<br/>&lt;/pre&gt;<br/><br/>&lt;p&gt;<br/>The same check which forbids &quot;BAR&quot; would be written as: &lt;code&gt;compilationUnitNode.hasDirectChildren(BAR)&lt;/code&gt;.<br/>This allows both of the previous grammar evolutions to be made without impacting the check at all.<br/>&lt;/p&gt;", "noteLogin": "eric.hartmann", "lang": "java", "langName": "Java", "scope": "MAIN", "isExternal": false, "type": "CODE_SMELL", "params": [{"key": "xpathQuery", "desc": "The XPath query", "defaultValue": ""}, {"key": "message", "desc": "The violation message", "defaultValue": "The XPath expression matches this piece of code"}]}, {"key": "squid:XPath_1369910135", "repo": "squid", "name": "firstOf() alternatives should be rules or token types", "createdAt": "2013-05-30T10:35:35+0200", "updatedAt": "2013-03-27T08:52:40+0100", "htmlDesc": "<p>\r\nThe tree produced by the <code>firstOf()</code> matcher is hard to work with from checks when alternatives are not named.\r\n</p>\r\n\r\n<p>\r\nConsider the following rule:\r\n</p>\r\n\r\n<pre>\r\nb.rule(COMPILATION_UNIT).is(\r\n b.firstOf( /* Non-Compliant */\r\n \"FOO\",\r\n \"BAR\"));\r\n</pre>\r\n\r\n<p>\r\nIf, from a check, one wants to forbid the usage of the \"BAR\" alternative,\r\nthe easiest option will be to verify that the value of the first token is \"BAR\",\r\ni.e. <code>\"BAR\".equals(compilationUnitNode.getTokenValue())</code>.\r\n</p>\r\n\r\n<p>\r\nThis is not maintainable, for at least two reasons:\r\n</p>\r\n\r\n<ul>\r\n <li>The grammar might evolve to also accept \"bar\" in lowercase, which will break <code>\"BAR\".equals(...)</code></li>\r\n <li>The grammar might evolve to optionally accept \"hello\" before the <code>firstOf()</code>, which will break <code>compilationUnitNode.getTokenValue()</code></li>\r\n</ul>\r\n\r\n<p>\r\nInstead, it is much better to rewrite the grammar as:\r\n</p>\r\n\r\n<pre>\r\nb.rule(COMPILATION_UNIT).is(\r\n firstOf( /* Compliant */\r\n FOO,\r\n BAR));\r\nb.rule(FOO).is(\"FOO\");\r\nb.rule(BAR).is(\"BAR\");\r\n</pre>\r\n\r\n<p>\r\nThe same check which forbids \"BAR\" would be written as: <code>compilationUnitNode.hasDirectChildren(BAR)</code>.\r\nThis allows both of the previous grammar evolutions to be made without impacting the check at all.\r\n</p>", "severity": "MAJOR", "status": "READY", "internalKey": "XPath", "isTemplate": false, "templateKey": "squid:XPath", "tags": [], "sysTags": [], "lang": "java", "langName": "Java", "scope": "MAIN", "isExternal": false, "type": "CODE_SMELL", "params": [{"key": "xpathQuery", "desc": "The XPath query", "defaultValue": "//expression[primary/qualifiedIdentifier[count(IDENTIFIER) = 2]/IDENTIFIER[2]/@tokenValue = 'firstOf' and primary/identifierSuffix/arguments/expression[not(primary) or primary[not(qualifiedIdentifier) or identifierSuffix]]]"}, {"key": "message", "desc": "The violation message", "defaultValue": "Refactor this firstOf() to only use a rule or token type for each alternative."}]}], "actives": {"squid:MethodCyclomaticComplexity": [{"qProfile": "Sonar way with Findbugs:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "10"}]}, {"qProfile": "Sonar way:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "10"}]}], "squid:S1067": [{"qProfile": "Sonar way with Findbugs:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "3"}]}, {"qProfile": "Sonar way:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "3"}]}], "squid:ClassCyclomaticComplexity": [{"qProfile": "Sonar way with Findbugs:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "200"}]}, {"qProfile": "Sonar way:java", "inherit": "NONE", "severity": "MAJOR", "params": [{"key": "max", "value": "200"}]}]}, "facets": [{"name": "tags", "values": [{"val": "complexity", "count": 141}, {"val": "java8", "count": 42}, {"val": "javadoc", "count": 13}]}, {"name": "languages", "values": [{"val": "java", "count": 563}]}, {"name": "repositories", "values": [{"val": "findbugs", "count": 419}, {"val": "squid", "count": 138}, {"val": "common-java", "count": 6}]}]}, "api/rules/show": {"rule": {"key": "java:S1541", "repo": "java", "name": "Methods should not be too complex", "createdAt": "2023-08-10T13:36:48-0500", "htmlDesc": "<h2>Why is this an issue?</h2>\n<p>The cyclomatic complexity of methods should not exceed a defined threshold.</p>\n<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>\n<h3>Exceptions</h3>\n<p>While having a large number of fields in a class may indicate that it should be split, this rule nonetheless ignores high complexity in\n<code>equals</code> and <code>hashCode</code> methods.</p>", "mdDesc": "<h2>Why is this an issue?</h2>\n<p>The cyclomatic complexity of methods should not exceed a defined threshold.</p>\n<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>\n<h3>Exceptions</h3>\n<p>While having a large number of fields in a class may indicate that it should be split, this rule nonetheless ignores high complexity in\n<code>equals</code> and <code>hashCode</code> methods.</p>", "severity": "CRITICAL", "status": "READY", "isTemplate": false, "tags": [], "sysTags": ["brain-overload"], "lang": "java", "langName": "Java", "params": [{"key": "Threshold", "htmlDesc": "The maximum authorized complexity.", "defaultValue": "10", "type": "INTEGER"}], "defaultDebtRemFnType": "LINEAR_OFFSET", "defaultDebtRemFnCoeff": "1min", "defaultDebtRemFnOffset": "10min", "effortToFixDescription": "per complexity point above the threshold", "debtOverloaded": false, "debtRemFnType": "LINEAR_OFFSET", "debtRemFnCoeff": "1min", "debtRemFnOffset": "10min", "type": "CODE_SMELL", "defaultRemFnType": "LINEAR_OFFSET", "defaultRemFnGapMultiplier": "1min", "defaultRemFnBaseEffort": "10min", "remFnType": "LINEAR_OFFSET", "remFnGapMultiplier": "1min", "remFnBaseEffort": "10min", "remFnOverloaded": false, "gapDescription": "per complexity point above the threshold", "scope": "MAIN", "isExternal": false, "descriptionSections": [{"key": "root_cause", "content": "<p>The cyclomatic complexity of methods should not exceed a defined threshold.</p>\n<p>Complex code can perform poorly and will in any case be difficult to understand and therefore to maintain.</p>\n<h3>Exceptions</h3>\n<p>While having a large number of fields in a class may indicate that it should be split, this rule nonetheless ignores high complexity in\n<code>equals</code> and <code>hashCode</code> methods.</p>"}], "educationPrinciples": [], "cleanCodeAttribute": "FOCUSED", "cleanCodeAttributeCategory": "ADAPTABLE", "impacts": [{"softwareQuality": "MAINTAINABILITY", "severity": "HIGH"}]}, "actives": []}, "api/rules/tags": {"tags": ["java8", "performance", "security"]}, "api/rules/update": {"rule": {"key": "squid:forbidSonar", "repo": "squid", "name": "forbidSonar", "createdAt": "2018-06-06T16:09:09+0200", "htmlDesc": "Forbid classes with name starting with Sonar", "mdDesc": "Forbid classes with name starting with Sonar", "severity": "MAJOR", "status": "READY", "isTemplate": false, "templateKey": "squid:S3688", "tags": [], "sysTags": [], "lang": "java", "langName": "Java", "params": [{"key": "className", "htmlDesc": "Fully qualified name of the forbidden class. Use a regex to forbid a package.", "defaultValue": "**/Sonar*", "type": "STRING"}], "debtOverloaded": false, "remFnOverloaded": false, "scope": "MAIN", "isExternal": false, "type": "CODE_SMELL"}}, "api/settings/list_definitions": {"definitions": [{"key": "sonar.string", "name": "String", "description": "String property", "type": "STRING", "category": "general", "subCategory": "test", "multiValues": false, "defaultValue": "123", "options": [], "fields": []}, {"key": "sonar.list", "name": "List", "description": "List property", "type": "SINGLE_SELECT_LIST", "category": "general", "subCategory": "general", "multiValues": false, "options": ["a", "b"], "fields": []}, {"key": "sonar.multiValues", "name": "Multi values", "description": "Multi values property", "type": "STRING", "category": "general", "subCategory": "general", "multiValues": true, "options": [], "fields": []}, {"key": "sonar.propertySet", "name": "Property Set", "description": "Property Set property", "type": "PROPERTY_SET", "category": "property", "subCategory": "set", "multiValues": false, "options": [], "fields": [{"key": "text", "name": "Text", "description": "Text field description", "type": "TEXT", "options": []}, {"key": "list", "name": "List", "description": "List field description", "type": "SINGLE_SELECT_LIST", "options": ["value1", "value2"]}]}]}, "api/settings/values": {"settings": [{"key": "sonar.test.jira", "value": "abc", "inherited": true, "parentOrigin": "INSTANCE"}, {"key": "sonar.autogenerated", "values": ["val1", "val2", "val3"], "parentOrigin": "INSTANCE"}, {"key": "sonar.demo", "fieldValues": [{"boolean": "true", "text": "foo"}, {"boolean": "false", "text": "bar"}], "parentOrigin": "INSTANCE"}]}, "api/sources/scm": {"scm": [[1, "julien", "2013-03-13T12:34:56+0100", "a1e2b3e5d6f5"], [2, "julien", "2013-03-14T13:17:22+0100", "b1e2b3e5d6f5"], [3, "simon", "2014-01-01T15:35:36+0100", "c1e2b3e5d6f5"]]}, "api/sources/show": {"sources": [[20, "<span class=\"k\">package </span>org.sonar.check;"], [21, ""], [22, "<span class=\"k\">public </span><span class=\"k\">enum </span><span class=\"sym-922 sym\">Priority</span> {"], [23, "  <span class=\"cppd\">/**</span>"], [24, "<span class=\"cppd\">   * WARNING : DO NOT CHANGE THE ENUMERATION ORDER</span>"], [25, "<span class=\"cppd\">   * the enum ordinal is used for db persistence</span>"]]}, "api/timemachine/index": {"errors": [{"msg": "The web service '/api/...' doesn't exists anymore, please read its documentation to use alternatives"}]}, "api/user_groups/create": {"group": {"id": "42", "organization": "my-org", "name": "some-product-bu", "description": "Business Unit for Some Awesome Product", "membersCount": 0, "default": false}}, "api/user_groups/search": {"paging": {"pageIndex": 1, "pageSize": 100, "total": 2}, "groups": [{"id": 3, "name": "users", "description": "Users", "membersCount": 17, "default": true}, {"id": 4, "name": "administrators", "description": "Administrators", "membersCount": 2, "default": false}]}, "api/user_groups/users": {"users": [{"login": "admin", "name": "Administrator", "selected": true}, {"login": "george.orwell", "name": "George Orwell", "selected": true}], "p": 1, "ps": 25, "total": 2}, "api/user_properties/index": {"errors": [{"msg": "The web service '/api/...' doesn't exists anymore, please read its documentation to use alternatives"}]}, "api/user_tokens/generate": {"login": "grace.hopper", "name": "Third Party Application", "createdAt": "2018-01-10T14:06:05+0100", "token": "123456789"}, "api/user_tokens/search": {"login": "grace.hopper", "userTokens": [{"name": "Project scan on AppVeyor", "createdAt": "2015-08-02T15:44:27+0200"}, {"name": "Project scan on Jenkins", "createdAt": "2015-04-08T21:57:47+0200"}, {"name": "Project scan on Travis", "createdAt": "2015-11-26T08:31:07+0100"}]}, "api/users/groups": {"paging": {"pageIndex": 1, "pageSize": 25, "total": 2}, "groups": [{"id": 1, "name": "sonar-admins", "description": "Sonar Admins", "selected": false, "default": false}, {"id": 2, "name": "sonar-users", "description": "Sonar Users", "selected": true, "default": true}]}, "api/users/search": {"paging": {"pageIndex": 1, "pageSize": 50, "total": 2}, "users": [{"login": "fmallet", "name": "Freddy Mallet", "active": true, "email": "f@m.com", "groups": ["sonar-administrators", "sonar-users"], "tokensCount": 1, "local": true, "externalIdentity": "fmallet", "externalProvider": "sonarqube", "avatar": "2f9dff586d3f74f825b059e3798a3bbb"}, {"login": "sbrandhof", "name": "Simon", "active": true, "email": "s.brandhof@company.tld", "scmAccounts": ["simon.brandhof", "s.brandhof@company.tld"], "groups": ["sonar-users"], "tokensCount": 3, "local": false, "externalIdentity": "sbrandhof@ldap.com", "externalProvider": "LDAP", "avatar": "3930ad855bc7fe48db8e9a663174cdd3"}]}, "api/webhooks/create": {"webhook": {"key": "uuid", "name": "My webhook", "url": "https://www.my-webhook-listener.com/sonar", "hasSecret": true}}, "api/webhooks/deliveries": {"paging": {"pageIndex": 1, "pageSize": 10, "total": 1}, "deliveries": [{"id": "d1", "componentKey": "my-project", "ceTaskId": "task-1", "name": "Jenkins", "url": "http://jenkins", "at": "2017-07-14T04:40:00+0200", "success": true, "httpStatus": 200, "durationMs": 10}]}, "api/webhooks/delivery": {"delivery": {"id": "d1", "componentKey": "my-project", "ceTaskId": "task-1", "name": "Jenkins", "url": "http://jenkins", "at": "2017-07-14T04:40:00+0200", "success": true, "httpStatus": 200, "durationMs": 10, "payload": "{\"status\"=\"SUCCESS\"}"}}, "api/webhooks/list": {"webhooks": [{"key": "UUID-1", "name": "my first webhook", "url": "http://www.my-webhook-listener.com/sonarqube"}, {"key": "UUID-2", "name": "my 2nd webhook", "url": "https://www.my-other-webhook-listener.com/fancy-listner", "hasSecret": true}]}, "api/webservices/list": {"webServices": [{"path": "api/metric", "description": "Metrics", "actions": [{"key": "create", "description": "Create metric", "deprecatedSince": "5.3", "internal": false, "post": true, "hasResponseExample": true, "changelog": [{"description": "Requires 'Administer System' permission instead of 'Administer Quality Profiles'", "version": "6.6"}, {"description": "Remove database ID from response", "version": "6.0"}, {"description": "Deprecate database ID in response", "version": "4.5"}], "params": [{"key": "constrained_numeric_param", "required": false, "internal": false, "maximumValue": 12}, {"key": "constrained_string_param", "required": false, "internal": false, "maximumLength": 64, "minimumLength": 3}, {"key": "name", "required": false, "internal": false}, {"key": "severity", "description": "Severity", "required": false, "internal": false, "defaultValue": "BLOCKER", "exampleValue": "INFO", "deprecatedSince": "5.2", "deprecatedKey": "old_severity", "deprecatedKeySince": "4.6", "possibleValues": ["BLOCKER", "INFO"]}]}, {"key": "show", "internal": false, "post": false, "hasResponseExample": true}]}, {"path": "api/webservices", "description": "Get information on the web api supported on this instance.", "actions": [{"key": "list", "description": "List web services", "internal": false, "post": false, "hasResponseExample": true}, {"key": "response_example", "description": "Display web service response example", "internal": false, "post": false, "hasResponseExample": true, "params": [{"key": "action", "required": true, "description": "Action of the web service", "exampleValue": "search"}, {"key": "controller", "required": true, "description": "Controller of the web service", "exampleValue": "api/issues"}]}]}]}, "api/webservices/response_example": {"format": "json", "example": "{\n  \"paging\": {\n    \"pageIndex\": 1,\n    \"pageSize\": 100,\n    \"total\": 1\n  },\n  \"issues\": [\n    {\n      \"key\": \"01fc972e-2a3c-433e-bcae-0bd7f88f5123\",\n      \"component\": \"com.github.kevinsawicki:http-request:com.github.kevinsawicki.http.HttpRequest\",\n      \"project\": \"com.github.kevinsawicki:http-request\",\n      \"rule\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",\n      \"status\": \"RESOLVED\",\n      \"resolution\": \"FALSE-POSITIVE\",\n      \"severity\": \"MINOR\",\n      \"message\": \"'3' is a magic number.\",\n      \"line\": 530,\n      \"textRange\": {\n        \"startLine\": 81,\n        \"endLine\": 81,\n        \"startOffset\": 0,\n        \"endOffset\": 134\n      },\n      \"author\": \"Developer 1\",\n      \"debt\": \"2h1min\",\n      \"creationDate\": \"2013-05-13T17:55:39+0200\",\n      \"updateDate\": \"2013-05-13T17:55:39+0200\",\n      \"tags\": [\"bug\"],\n      \"comments\": [\n        {\n          \"key\": \"7d7c56f5-7b5a-41b9-87f8-36fa70caa5ba\",\n          \"login\": \"john.smith\",\n          \"htmlText\": \"Must be &quot;final&quot;!\",\n          \"markdown\": \"Must be \\\"final\\\"!\",\n          \"updatable\": false,\n          \"createdAt\": \"2013-05-13T18:08:34+0200\"\n        }\n      ],\n      \"attr\": {\n        \"jira-issue-key\": \"SONAR-1234\"\n      },\n      \"transitions\": [\n        \"unconfirm\",\n        \"resolve\",\n        \"falsepositive\"\n      ],\n      \"actions\": [\n        \"comment\"\n      ]\n    }\n  ],\n  \"components\": [\n    {\n      \"key\": \"com.github.kevinsawicki:http-request:src/main/java/com/github/kevinsawicki/http/HttpRequest.java\",\n      \"enabled\": true,\n      \"qualifier\": \"FIL\",\n      \"name\": \"HttpRequest.java\",\n      \"longName\": \"src/main/java/com/github/kevinsawicki/http/HttpRequest.java\",\n      \"path\": \"src/main/java/com/github/kevinsawicki/http/HttpRequest.java\"\n    },\n    {\n      \"key\": \"com.github.kevinsawicki:http-request\",\n      \"enabled\": true,\n      \"qualifier\": \"TRK\",\n      \"name\": \"http-request\",\n      \"longName\": \"http-request\"\n    }\n  ],\n  \"rules\": [\n    {\n      \"key\": \"checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck\",\n      \"name\": \"Magic Number\",\n      \"status\": \"READY\",\n      \"lang\": \"java\",\n      \"langName\": \"Java\"\n    }\n  ],\n  \"users\": [\n    {\n      \"login\": \"admin\",\n      \"name\": \"Administrator\",\n      \"active\": true,\n      \"email\": \"admin@sonarqube.org\"\n    }\n  ]\n\n}"}}